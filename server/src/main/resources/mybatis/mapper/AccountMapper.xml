<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "%7e//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="freshmanGuide.attendanceCheck.mapper.AccountMapper">
    <insert id="save" parameterType="freshmanGuide.attendanceCheck.DTO.BasicDTO$AccountInfoDTO">
        INSERT INTO account_info
        VALUES
        (
            #{fgMemberId},
            #{password},
            #{salt},
            #{isAdmin},
            #{registerApproval}
        )
    </insert>

    <select id="findByFgMemberId"
            parameterType="Integer"
            resultType="freshmanGuide.attendanceCheck.DTO.BasicDTO$AccountInfoDTO"
    >
        SELECT *
        FROM account_info
        WHERE fgMemberId=${fgMemberId}
    </select>

    <select id="findByMail"
            parameterType="String"
            resultType="freshmanGuide.attendanceCheck.DTO.BasicDTO$AccountInfoDTO"
    >
        SELECT *
        FROM
        (
            SELECT *
            FROM fg_member_info
            WHERE mail=${mail}
        ) AS S1
        LEFT JOIN
        (
            SELECT *
            FROM account_info
        ) AS S2
        ON S1.fgMemberId=S2.fgMemberId
    </select>

    <select id="findPasswordByFgMemberId"
            parameterType="Integer"
            resultType="String"
    >
        SELECT password
        FROM account_info
        WHERE fgMemberId=${fgMemberId}
    </select>

    <select id="findPasswordByMail"
            parameterType="String"
            resultType="String"
    >
        SELECT password
        FROM
        (
            SELECT *
            FROM fg_member_info
            WHERE mail=${mail}
        ) AS S1
        LEFT JOIN
        (
            SELECT *
            FROM account_info
        ) AS S2
        ON S1.fgMemberId=S2.fgMemberId
    </select>

    <select id="findAccountCheckInfoByFgMemberId"
            parameterType="Integer"
            resultType="freshmanGuide.attendanceCheck.DTO.BasicDTO$AccountCheckInfoDTO"
    >
        SELECT password, salt, isAdmin, registerApproval
        FROM account_info
        WHERE fgMemberId=${fgMemberId}
    </select>

    <select id="findAccountCheckInfoByMail"
            parameterType="String"
            resultType="freshmanGuide.attendanceCheck.DTO.BasicDTO$AccountCheckInfoDTO"
    >
        SELECT password, salt, isAdmin, registerApproval
        FROM
        (
            SELECT *
            FROM fg_member_info
            WHERE mail=${mail}
        ) AS S1
        LEFT JOIN
        (
            SELECT *
            FROM account_info
        ) AS S2
        ON S1.fgMemberId=S2.fgMemberId
    </select>

    <update id="updateIsAdmin" parameterType="Integer">
        UPDATE account_info
        SET isAdmin=NOT (SELECT a.isAdmin FROM account_info a WHERE fgMemberId=${fgMemberId})
        WHERE fgMemberId=${fgMemberId}
    </update>

    <update id="updateRegisterApproval" parameterType="Integer">
        UPDATE account_info
        SET registerApproval=NOT (SELECT a.registerApproval FROM account_info a WHERE fgMemberId=${fgMemberId})
        WHERE fgMemberId=${fgMemberId}
    </update>

    <delete id="deleteByFgMemberId" parameterType="Integer">
        DELETE FROM account_info
        WHERE fgMemberId=${fgMemberId}
    </delete>
</mapper>